#!/bin/bash

################################################################################
# pipeline to build data for structure-property training and evaluation
#
# should be run from this directory
#
# (C) 2020 Bryan Kolaczkowski, University of Florida, Gainesville, FL USA
# Released under GNU General Public License (GPL)
# bryank@ufl.edu
################################################################################

OUTDIR=../data            # location for all the data
tmp=${OUTDIR}/mmseqs_tmp  # temporary storage for mmseqs runs

case ${1} in

################################################################################
# PART 1: generate amino-acid profiles database

1)
  # download UniRef50 mmseqs db
  # NOTE: this can take a day or more
  echo "step ${1}: uniref50 download"
  out=${OUTDIR}/uniref50
  [[ -d ${out} ]] || mkdir ${out}
  mmseqs databases UniRef50 ${out}/uniref50 ${tmp} 1> bd${1}.log 2> bd${1}.err
  ;;

2)
  # download UniRef90 mmseqs db
  # NOTE: this can take a day or more
  echo "step ${2}: uniref90 download"
  out=${OUTDIR}/uniref90
  [[ -d ${out} ]] || mkdir ${out}
  mmseqs databases UniRef90 ${out}/uniref90 ${tmp} --compressed 1 1> bd${1}.log 2> bd${1}.err
  mmseqs createindex ${out}/uniref90 ${tmp} --compressed 1 1>> bd${1}.log 2>> bd${1}.err
  ;;

3)
  # each-vs-all UniRef50-vs-90 search
  # NOTE: this can take about a week
  echo "step ${1}: uniref50-90 each-vs-all search"
  qry=${OUTDIR}/uniref50/uniref50
  trg=${OUTDIR}/uniref90/uniref90
  aln=${OUTDIR}/uniref50-90/aln
  mmseqs search ${qry} ${trg} ${aln} ${tmp} -a 1 -e 0.1 -s 2 1> bd${1}.log 2> bd${1}.err
  ;;

4)
  # convert UniRef50 search results to profiles
  # NOTE: this can take a day or more
  echo "step ${1}: uniref50 profiles"
  qry=${OUTDIR}/uniref50/uniref50
  trg=${OUTDIR}/uniref90/uniref90
  aln=${OUTDIR}/uniref50-90/aln
  prf=${OUTDIR}/uniref50-90/pro
  mmseqs result2profile ${qry} ${trg} ${aln} ${prf} -e 0.1 --e-profile 0.1 1> bd${1}.log 2> bd${1}.err
  ;;

5)
  # convert UniRef50 profiles to pssms
  # NOTE: this can take a day or more
  echo "step ${1}: uniref50 pssms"
  prf=${OUTDIR}/uniref50-90/pro
  psm=${OUTDIR}/uniref50-90/uniref50.pssm
  mmseqs profile2pssm ${prf} ${psm} 1> bd${1}.log 2> bd${1}.err
  ;;

6)
  # convert UniRef50 pssms to probability distributions
  # NOTE: this can take a few days
  echo "step ${1}: uniref50 amino-acid probability distributions"
  psm=${OUTDIR}/uniref50-90/uniref50.pssm
  prb=${OUTDIR}/uniref50-90/uniref50.probdists.csv
  ./pdists ${psm} ${prb} 1> bd${1}.log 2> bd${1}.err
  ;;

# END PART 1
################################################################################

################################################################################
# PART 2: train-validate-test split

7)
  # cluster UniRef50 database at very low sequence similarity
  # NOTE: this can take a day or more
  echo "step ${1}: uniref50 clustering"
  db=${OUTDIR}/uniref50/uniref50
  cdb=${OUTDIR}/uniref50/clust01
  mmseqs cluster ${db} ${cdb} ${tmp} -c 0.6 -e 0.1 --min-seq-id 0.1 1> bd${1}.log 2> bd${1}.err
  mmseqs createtsv ${db} ${db} ${cdb} ${cdb}.tsv 1>> bd${1}.log 2>> bd${1}.err 
  ;;

8)
  # split UniRef50 database into train-validate-test, preserving
  # low-sequence-similarity clustering
  # NOTE: this can take an hour or so
  rseed=20996417
  train=0.8
  valid=0.1
  testd=0.1
  cdb=${OUTDIR}/uniref50/clust01.tsv
  lkp=${OUTDIR}/uniref50/uniref50.lookup
  out=${OUTDIR}/uniref50-90/train_valid_test.txt
  ./tvt ${cdb} ${lkp} ${out} ${train} ${valid} ${testd} ${rseed} 1> bd${1}.log 2> bd${1}.err 
  ;;

# END PART 2
################################################################################

*)
  echo "error: unknown or missing command-line option ${1}."
  ;;

esac
echo "finished."

