#!/bin/bash

###############################################################################
# pipeline to build data for structure-property training and evaluation
#
# should be run from this directory
#
# (C) 2020 Bryan Kolaczkowski, University of Florida, Gainesville, FL USA
# Released under GNU General Public License (GPL)
# bryank@ufl.edu
###############################################################################

# where to put all the data
OUTDIR=../data

case ${1} in

###############################################################################
# PART 1: generate amino-acid profiles using UniRef90 database

1)
  # 1. download UniRef90 mmseqs db
  # NOTE: this will take a day or more
  echo "step ${1}: download uniref90 mmseqs2 database"
  tmp=${OUTDIR}/mmseqs_tmp
  out=${OUTDIR}/uniref90
  [[ -d ${out} ]] || mkdir ${out}
  mmseqs databases UniRef90 ${out}/uniref90 ${tmp} --compressed 1
  mmseqs createindex ${out}/uniref90 ${tmp} --compressed 1
  ;;

2)
  # 2. download UniRef50 mmseqs db
  # NOTE: this will take a day or more
  echo "step ${1}: download uniref50 mmseqs2 database"
  tmp=${OUTDIR}/mmseqs_tmp
  out=${OUTDIR}/uniref50
  [[ -d ${out} ]] || mkdir ${out}
  mmseqs databases UniRef50 ${out}/uniref50 ${tmp}
  # don't compress this db; we may need to read the files
  # no prefilter index needed; this is not a target db
  ;;

3)
  # 3. search uniref90 target, using uniref50 query
  # NOTE: this should take a few days or more
  echo "step ${1}: make profiles for uniref50"
  tmp=${OUTDIR}/mmseqs_tmp
  out=${OUTDIR}/uniref50_pssms
  qry=${OUTDIR}/uniref50/uniref50
  trg=${OUTDIR}/uniref90/uniref90
  ./makeProfiles -q ${qry} -t ${trg} -o ${out} --tmp ${tmp} --evalue 0.01 --split 100
  ;;






# 1. get dssp properties for all current entries in PDB
# NOTE: this will take a day or more
#./getPDBdata -o ${OUTDIR}/pdbdata-strctinfo --exclude ${OUTDIR}/exclude_ids.txt

## TRAIN-VALIDATE-TEST ........................................................

# 2. cluster PDB sequences by sequence identity
# NOTE: this will take a few minutes
#./clustPDBdata --seqid 0.1 -d ${OUTDIR}/pdbdata-strctinfo -o ${OUTDIR}/clusters.csv

# 3. split PDB data into training, validate and testing data
# NOTE: this will take a moment
#./splitPDBdata -c ${OUTDIR}/clusters.csv -o ${OUTDIR}/tvtsplit.txt > ${OUTDIR}/tvtsplit.log

# 4. calculate frequencies of each secondary structure in the training data
# NOTE: this will take a few minutes
#./calcTrainWts -f ${OUTDIR}/tvtsplit.txt -d ${OUTDIR}/pdbdata-strctinfo -o ${OUTDIR}/tvtsplit.trainwts.txt

## EVOLUTIONARY INFORMATION ...................................................

# 5. generate fasta file for structure data from pdb
# NOTE: this will take a few minutes
#./makePDBfasta -d ${OUTDIR}/pdbdata-strctinfo -o ${OUTDIR}/pdbdata-strctinfo.fasta

# 6. convert fasta file to mmseqs2 query database
# NOTE: this will take a moment
#mmseqs createdb ${OUTDIR}/pdbdata-strctinfo.fasta ${OUTDIR}/mmseqsdb/pdbdata-strctinfo.db --createdb-mode 1 --shuffle 0

# 7. search pdbdata fasta file against UniRef90 database
# NOTE: this will take at least a few days
#mmseqs search ${OUTDIR}/mmseqsdb/pdbdata-strctinfo.db ${OUTDIR}/mmseqsdb/uniref90 ${OUTDIR}/mmseqsdb/pdb_vs_uniref ${OUTDIR}/mmseqs_tmp -e 0.005 -a

# 8. convert UniRef90 search results to profile database
#mmseqs result2profile ${OUTDIR}/mmseqsdb/pdbdata-strctinfo.db ${OUTDIR}/mmseqsdb/uniref90 ${OUTDIR}/mmseqsdb/pdb_vs_uniref ${OUTDIR}/mmseqsdb/pdb_vs_uniref_profile

# 9. convert UniRef90 profile database to pssms
#mmseqs profile2pssm ${OUTDIR}/mmseqsdb/pdb_vs_uniref_profile ${OUTDIR}/pdb_vs_uniref_profile.pssm

# 10. parse UniRef90 pssms


# 11. clean up mmseqs databases we don't need
# NOTE: leave the UniRef90 database that took a day or more to download
# Note: takes a moment

*)
  echo "error: unknown or missing command-line option ${1}."
  ;;

esac
echo "finished."

